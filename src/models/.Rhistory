sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
}
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
}
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red", linetype='dash')
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
# Import libraries
library(ggplot2)
library(caret)
# Read data, convert categorical variables to factor type
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
lm_poly7 <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
# Generate and save predictions
scoring_data$preds <- predict(lm_poly7, scoring_data[c("bfp", "age", "sex")])
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
}
}
summary(lm_poly7)
View(scoring_data)
install.packages(equatiomatic)
install.packages(equatiomatic)
install.packages("equatiomatic")
library(equatiomatic)
extract_eq(lm_poly7)
extract_eq(lm_poly7, use_coefs = TRUE)
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
print(comp_plot)
}
}
View(lm_poly7)
lm_poly7
lm_poly7$coefficients
# Save coefficients
write.csv(lm_poly7$coefficients, file = "./../../models/lm_poly7_coeffs.csv")
# Read data, convert categorical variables to factor type
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
View(scoring_data)
seq(0, 4)
# Create visualizations
df_x <- seq(0, 100, .1)
# Create visualizations
df_x <- seq(0.1, 100, .1)
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
rep(seq(0, 4), 10)
length(rep(seq(0, 4), 10))
# Create visualizations
df_bfp <- rep(seq(0.1, 100, .1), 10)
seq(rep(0, 10), rep(10, 10))
rep(0, 10)
c(rep(0, 10), rep(1, 10))
seq(0.1, 100, .1)
length(seq(0.1, 100, .1))
rep(0:4, 1000)
df_age <- c(
rep(0, 1000),
rep(1, 1000),
rep(2, 1000),
rep(3, 1000),
rep(4, 1000)
)
df_age <- rep(c(
rep(0, 1000),
rep(1, 1000),
rep(2, 1000),
rep(3, 1000),
rep(4, 1000)
), 2)
df_sex <- c(rep(0, 5000), 2)
# Train polynomial regression model
lm_poly7 <- lm(score ~ poly(bfp, 8, raw=TRUE) + age + sex, data=scoring_data)
# Create visualizations
df_x <- seq(0.1, 100, .1)
df_y <- predict(lm_poly7, c(df_x, rep(age_group, 1000), rep(sex_group, 1000)))
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
df_x <- seq(0.1, 100, .1)
df_y <- predict(lm_poly7, c(df_x, rep(age_group, 1000), rep(sex_group, 1000)))
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
print(comp_plot)
}
}
# Create visualizations
df_bfp <- seq(0.1, 100, .1)
df_age <- rep(age_group, 1000)
df_sex <- rep(sex_group, 1000)
data.frame()
data.frame()
data.frame(df_bfp, df_age, df_sex)
df_y <- predict(lm_poly7, data.frame(df_bfp, df_age, df_sex))
# Create visualizations
df_bfp <- seq(0.1, 100, .1)
df_age <- rep(age_group, 1000)
df_sex <- rep(sex_group, 1000)
df_y <- predict(lm_poly7, data.frame(df_bfp, df_age, df_sex))
df_sex <- rep(sex_group, 1000)
df_x <- data.frame(df_bfp, df_age, df_sex)
names(df_x) <- c("bfp", "age", "sex")
df_y <- predict(lm_poly7, df_x)
df_sex <- rep(sex_group, 1000)
df <- data.frame(df_bfp, df_age, df_sex)
names(df) <- c("bfp", "age", "sex")
df$y <- predict(lm_poly7, df)
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
df_bfp <- seq(0.1, 100, .1)
df_age <- rep(age_group, 1000)
df_sex <- rep(sex_group, 1000)
df <- data.frame(df_bfp, df_age, df_sex)
names(df) <- c("bfp", "age", "sex")
df$y_hat <- predict(lm_poly7, df)
detailed_plot <- ggplot(data = df, mapping = aes(x = bfp)) +
geom_point(aes(y = y), color = "darkblue") +
geom_line(aes(y = y_hat), color = "red")
print(detailed_plot)
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
print(comp_plot)
}
}
# Import libraries
library(ggplot2)
library(caret)
# Read data, convert categorical variables to factor type
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
View(scoring_data)
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_fill_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth")
)
# Print plot
print(comp_plot)
}
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_fill_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Health Score"
)
# Print plot
print(comp_plot)
}
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_fill_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score"
)
# Print plot
print(comp_plot)
}
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score"
)
# Print plot
print(comp_plot)
}
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score"
) +
xlim(c(0, 100))
# Print plot
print(comp_plot)
}
View(scoring_data)
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score",
color = "Age Range"
)
# Print plot
print(comp_plot)
}
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score (on scale of 0 to 1)",
color = "Age Range"
) +
scale_x_continuous(breaks = c(0, 20, 40, 60), labels = c("0%", "20%", "40%", "60%"))
# Print plot
print(comp_plot)
}
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score (scaled 0 to 1)",
color = "Age Range"
) +
scale_x_continuous(breaks = c(0, 20, 40, 60), labels = c("0%", "20%", "40%", "60%"))
for (sex_group in unique(scoring_data$sex)) {
# Define values for visualization subtitle
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
# Subset dataframe by sex
sub_df <- scoring_data[scoring_data$sex == sex_group,]
# Create visualization
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score, color = age)) +
scale_color_discrete(labels = c("20-29", "30-39", "40-49", "50-59", "60-69")) +
labs(
title = "Body Fat Pct vs Health Score",
subtitle = paste(sex_val, "at birth"),
x = "Body Fat Percentage",
y = "Health Score (scaled 0 to 1)",
color = "Age Range"
) +
scale_x_continuous(breaks = c(0, 20, 40, 60), labels = c("0%", "20%", "40%", "60%"))
# Print plot
print(comp_plot)
}
