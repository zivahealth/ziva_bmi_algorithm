scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
plot(scoring_data$bfp, scoring_data$score, type = "l")
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
glm(score ~ ., data = scoring_data)
lm(score ~ ., data = scoring_data)
scoring.lm <- lm(score ~ ., data = scoring_data)
summary(scoring.lm)
predict(scoring.lm, scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f",])
preds <- predict(scoring.lm, scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f",])
plot(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], preds)
plot(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], preds, type = "l")
lines(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","score"])
scoring.lm <- glm(score ~ ., data = scoring_data)
summary(scoring.lm)
preds <- predict(scoring.lm, scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f",])
plot(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], preds, type = "l")
lines(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","score"])
scoring.lm <- nls(score ~ ., data = scoring_data)
library(caret)
scoring_data[,-score]
scoring_data[,-"score"]
scoring_data[,-c("score")]
scoring_data[c("bfp", "age", "sex")]
scoring_data[c("score")]
knnmodel <- knnreg(scoring_data[c("bfp", "age", "sex")], scoring_data[c("score")])
knnmodel <- knnreg(scoring_data[c("bfp", "age", "sex")], scoring_data$score)
pred_df <- scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f",]
knn_preds <- predict(knnmodel, pred_df[c("bfp", "age", "sex")])
pred_df[c("bfp", "age", "sex")]
knn_preds <- predict(knnmodel, data.frame(pred_df[c("bfp", "age", "sex")]))
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
plot(scoring_data$bfp, scoring_data$score, type = "l")
scoring.lm <- nls(score ~ ., data = scoring_data)
scoring.lm <- lm(score ~ ., data = scoring_data)
summary(scoring.lm)
preds <- predict(scoring.lm, scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f",])
plot(scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","bfp"], preds, type = "l")
plot(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], preds, type = "l")
preds <- predict(scoring.lm, scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,])
plot(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], preds, type = "l")
lines(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","score"])
plot(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], preds, type = "l",
xlim = c(0, 100), ylim = c(0, 1))
lines(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], scoring_data[scoring_data$age == "twenties" & scoring_data$sex == "f","score"])
lines(scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"bfp"], scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,"score"])
preds <- predict(scoring.lm, pred_df)
pred_df <- scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,]
preds <- predict(scoring.lm, pred_df)
plot(pred_df$bfp, preds, type = "l",
xlim = c(0, 100), ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score)
knnmodel <- knnreg(scoring_data[c("bfp", "age", "sex")], scoring_data$score)
knn_preds <- predict(knnmodel, pred_df)
knnmodel <- knnreg(scoring_data[c("bfp", "age", "sex")], scoring_data$score)
knn_preds <- predict(knnmodel, pred_df)
knnmodel <- knnreg(scoring_data[c("bfp", "age", "sex")], scoring_data$score)
knn_preds <- predict(knnmodel, pred_df)
knn_preds <- predict(knnmodel, pred_df[c("bfp", "age", "sex")])
plot(pred_df$bfp, knn_preds, type = "l",
xlim = c(0, 100), ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score)
lines(pred_df$bfp, pred_df$score, col='red')
# Generate predictions on the female 20s subcategory
pred_df <- scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,]
knn_preds <- predict(knnmodel, pred_df[c("bfp", "age", "sex")])
# Import libraries
library(ggplot2)
for (age_group in scoring_data$age) {
print(age_group)
}
for (age_group in unique(scoring_data$age)) {
print(age_group)
}
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
print(sex_group)
}
print(age_group)
}
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
}
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score))
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score))
# Generate and save predictions
scoring_data$preds <- predict(knnmodel, scoring_data[c("bfp", "age", "sex")])
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
# Read data, convert categorical variables to factor type
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
# fit polynomial regression models up to degree 5
linear_model1 <- lm(score~., data=scoring_data)
linear_model2 <- lm(score~poly(.,2,raw=TRUE), data=scoring_data)
linear_model2 <- lm(score~poly(bfp,2,raw=TRUE) + age + sex, data=scoring_data)
linear_model3 <- lm(score ~ poly(bfp, 3, raw=TRUE) + age + sex, data=scoring_data)
# fit polynomial regression models up to degree 5
linear_model1 <- lm(score ~ ., data=scoring_data)
linear_model2 <- lm(score ~ poly(bfp, 2, raw=TRUE) + age + sex, data=scoring_data)
linear_model3 <- lm(score ~ poly(bfp, 3, raw=TRUE) + age + sex, data=scoring_data)
linear_model4 <- lm(score ~ poly(bfp, 4, raw=TRUE) + age + sex, data=scoring_data)
linear_model5 <- lm(score ~ poly(bfp, 5, raw=TRUE) + age + sex, data=scoring_data)
pred_df <- scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,]
# fit polynomial regression models up to degree 5
lm1 <- lm(score ~ ., data=scoring_data)
lm2 <- lm(score ~ poly(bfp, 2, raw=TRUE) + age + sex, data=scoring_data)
lm3 <- lm(score ~ poly(bfp, 3, raw=TRUE) + age + sex, data=scoring_data)
lm4 <- lm(score ~ poly(bfp, 4, raw=TRUE) + age + sex, data=scoring_data)
lm5 <- lm(score ~ poly(bfp, 5, raw=TRUE) + age + sex, data=scoring_data)
pred_df <- scoring_data[scoring_data$age == 0 & scoring_data$sex == 1,]
plot(pred_df$bfp, predict(lm1, pred_df))
plot(pred_df$bfp, predict(lm1, pred_df), type = "l")
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm1, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm2, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm3, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm4, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm5, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm10 <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm10, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm_high <- lm(score ~ poly(bfp, 50, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm_high <- lm(score ~ poly(bfp, 100, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm5, pred_df), type = "l", ylim = c(0, 1))
lm_high <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
lm_high <- lm(score ~ poly(bfp, 100, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
lm_high <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
plot(pred_df$bfp, predict(lm_high, pred_df), type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm_high, pred_df)+.8, type = "l", ylim = c(0, 1))
plot(pred_df$bfp, predict(lm_high, pred_df)+.08, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm_high, pred_df)+.09, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
summary(lm_high)
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lm_high <- lm(score ~ poly(bfp, 8, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lm_high <- lm(score ~ poly(bfp, 7, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm_high <- lm(score ~ poly(bfp, 6, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm_high <- lm(score ~ poly(bfp, 7, raw=TRUE) + age + sex, data=scoring_data)
plot(pred_df$bfp, predict(lm_high, pred_df)+.1, type = "l", ylim = c(0, 1))
lines(pred_df$bfp, pred_df$score, col='red')
lm_poly7 <- lm(score ~ poly(bfp, 7, raw=TRUE) + age + sex, data=scoring_data)
# Generate and save predictions
scoring_data$preds <- predict(lm_poly7, scoring_data[c("bfp", "age", "sex")])
lm_poly7 <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
# Generate and save predictions
scoring_data$preds <- predict(lm_poly7, scoring_data[c("bfp", "age", "sex")])
summary(scoring_data$preds)
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
}
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp, y = score)) +
geom_line()
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
}
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red", linetype='dash')
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
# Import libraries
library(ggplot2)
library(caret)
# Read data, convert categorical variables to factor type
scoring_data <- read.csv("./../../data/processed/scoring_data.csv")
scoring_data$age <- as.factor(scoring_data$age)
scoring_data$sex <- as.factor(scoring_data$sex)
lm_poly7 <- lm(score ~ poly(bfp, 10, raw=TRUE) + age + sex, data=scoring_data)
# Generate and save predictions
scoring_data$preds <- predict(lm_poly7, scoring_data[c("bfp", "age", "sex")])
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
}
}
summary(lm_poly7)
View(scoring_data)
install.packages(equatiomatic)
install.packages(equatiomatic)
install.packages("equatiomatic")
library(equatiomatic)
extract_eq(lm_poly7)
extract_eq(lm_poly7, use_coefs = TRUE)
for (age_group in unique(scoring_data$age)) {
for (sex_group in unique(scoring_data$sex)) {
# Define subgroup dataframe
sub_df <- scoring_data[scoring_data$age == age_group &
scoring_data$sex == sex_group,]
# Define values for visualization
if (sex_group == 1) {
sex_val <- "Female"
}
else {
sex_val <- "Male"
}
if (age_group == 0) {
age_val <- "Twenties"
}
else if (age_group == 1) {
age_val <- "Thirties"
}
else if (age_group == 2) {
age_val == "Forties"
}
else if (age_group == 3) {
age_val == "Fifties"
}
else {
age_val == "Sixties"
}
# Create visualizations
comp_plot <- ggplot(data = sub_df, mapping = aes(x = bfp)) +
geom_line(aes(y = score), color="darkblue") +
geom_line(aes(y = preds), color = "red")
print(comp_plot)
}
}
View(lm_poly7)
lm_poly7
lm_poly7$coefficients
# Save coefficients
write.csv(lm_poly7$coefficients, file = "./../../models/lm_poly7_coeffs.csv")
